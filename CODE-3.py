def solution(arr):
    result = []
    prev_num = arr[0]
    result.append(prev_num)
    
    for num in arr[1:]:
        if num!= prev_num:
            result.append(num)
            prev_num = num
            
    return result

이 코드는 배열 내의 연속된 중복 값을 제거하는 함수를 구현하는 것입니다.

solution() 함수에서는 입력으로 받은 배열 arr을 순회하며 중복되는 값들을 제거합니다.
첫 번째 값은 무조건 리스트에 추가되며, 이후 값들부터는 이전 값(prev_num)과 비교하여 다르면 리스트에 추가하고 이전 값으로 설정합니다.
이렇게 하면 결과적으로 중복되는 값들이 모두 제거된 배열이 만들어집니다.
예를 들어, solution([1, 2, 3, 2, 4]) 함수가 호출되면 반환값은 [1, 2, 3, 4]가 됩니다. 왜냐하면 [2, 3, 2, 4] 중 2와 3만이 이전 값과 다르기 때문입니다. 이 알고리즘은 매우 효율적이며 시간 복잡도는 O(n)입니다.

solution() 함수의 원리에 대해 설명해드리겠습니다.
이 함수는 주어진 배열에서 중복값을 제거하는 역할을 합니다. 즉, 배열의 요소 중에서 이전에 나온 값과 다른 경우에만 새로운 요소로 추가하여 결과 배열을 반환합니다.
함수를 자세히 보면:
먼저 빈 리스트인 result를 만듭니다. 이것은 최종적으로 중복을 제거한 배열을 저장하기 위한 공간입니다.
prev_num 변수에 배열 arr의 첫 번째 요소를 할당합니다. 이는 처음 시작할 때의 이전 값이 되며, 이 값과의 비교를 통해 중복 여부를 판단하게 됩니다.

첫 번째 요소는 항상 result 리스트에 추가됩니다.
이제 반복문을 사용하여 arr의 두 번째 요소부터 마지막 요소까지 순회하면서 각 요소가 prev_num과 다른지 비교합니다.
만약 다르다면 해당 요소를 result에 추가하고, prev_num을 업데이트합니다.

마지막으로, result 리스트를 반환합니다. 이것이 바로 중복을 제거한 배열입니다.
따라서 이 함수는 주어진 배열에서 연속적인 중복 값을 제거하고, 그 결과를 담은 배열을 반환하는 기능을 수행합니다.
